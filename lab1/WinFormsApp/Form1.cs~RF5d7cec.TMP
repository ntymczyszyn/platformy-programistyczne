using lab1;
using System.Collections.Generic;

namespace WinFormsApp
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
            errorMessages = new List<string>();
        }
        List<string> errorMessages;
        private void btnRun_Click(object sender, EventArgs e)
        {
            if (isValidInput())
                RunProgram();
            else
                DisplayError();
        }

        private void RunProgram()
        {
            Problem knapsack_problem = new Problem(Int32.Parse(numberOfItems.Text), Int32.Parse(seed.Text));
            textBoxInstance.Text = knapsack_problem.ToString();
            Result knapsack_problem_result = knapsack_problem.Solve(Int32.Parse(capacity.Text));
            textBoxResult.Text = knapsack_problem_result.ToString();
        }

        private bool isValidInput()
        {
            ValidateTextBox(numberOfItems);
            ValidateTextBox(seed);
            ValidateTextBox(capacity);
            
            return !errorMessages.Any(); 
        }
        private void ValidateTextBox(TextBox textBox)
        {
            if (isNotPositiveInteger(textBox))
                ErrorLog(textBox);
        }
        private bool isNotPositiveInteger(TextBox textBox)
        {
            int textBoxValue;
            return !int.TryParse(textBox.Text, out textBoxValue) || textBoxValue <= 0;
        }
        private void ErrorLog(TextBox textBox)
        {
            errorMessages.Add("Please enter a positive integer value in " + textBox.Name);
        }
        private void DisplayError()
        {
            MessageBox.Show(string.Join("\n", errorMessages), "Errors", MessageBoxButtons.OK, MessageBoxIcon.Error);
            errorMessages.Clear();
        }
        private void ClearAllTextBoxes()
        {
            ResetTextBoxColors();
            ResetTextBoxInput();
            ResetTextBoxOutput();
        }
        private void ResetTextBoxColors()
        {
            numberOfItems.BackColor = SystemColors.Window;
            seed.BackColor = SystemColors.Window;
            capacity.BackColor = SystemColors.Window;
        }
        private void ResetTextBoxInput()
        {
            numberOfItems.Text = "";
            seed.Text = "";
            capacity.Text = "";
        }
        private void ResetTextBoxOutput()
        {
            textBoxInstance.Text = "";
            textBoxResult.Text = "";
        }
        private void labelNumberOfItems_Click(object sender, EventArgs e)
        {

        }

        private void labelCapacity_Click(object sender, EventArgs e)
        {

        }

        private void labelInstance_Click(object sender, EventArgs e)
        {

        }

        private void labelResult_Click(object sender, EventArgs e)
        {

        }

        private void numberOfItems_TextChanged(object sender, EventArgs e)
        {
            TextBox textBox = (TextBox)sender;
            ValidateTextBoxInput(textBox);
        }
        private void seed_TextChanged(object sender, EventArgs e)
        {
            TextBox textBox = (TextBox)sender;
            ValidateTextBoxInput(textBox);
        }
        private void capacity_TextChanged(object sender, EventArgs e)
        {
            TextBox textBox = (TextBox)sender;
            ValidateTextBoxInput(textBox);
        }
        private void textBoxInstance_TextChanged(object sender, EventArgs e)
        {

        }

        private void textBoxResult_TextChanged(object sender, EventArgs e)
        {

        }
        private void ValidateTextBoxInput(TextBox textBox)
        {
            if (!string.IsNullOrEmpty(textBox.Text))
            {
                if (isNotPositiveInteger(textBox))
                    textBox.BackColor = Color.Red;
                else
                    textBox.BackColor = Color.LightGreen;
            }
            else
            {
                textBox.BackColor = SystemColors.Window;
            }
        }

        private void btnClear_Click(object sender, EventArgs e)
        {
            ClearAllTextBoxes();
        }
    }
}
